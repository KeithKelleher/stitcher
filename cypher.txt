match p=(n:`S_RANCHO-DISEASE-DRUG_2018-12-18_13-30`:Drug)-[*1..3]-(m:`S_GARD`) return p skip 150 limit 50

match p=(n)-[e*1..3]-(m:`GARD_v1`) where any(x in e where x.value='has_phenotype') return p limit 50

match(n:`S_RANCHO-DISEASE-DRUG_2018-12-18_13-30`:Drug)-[*1..3]-(m:`S_GARD`) with n,m match (m)-[e*1..2]-(d) where any(x in e where x.value='has_phenotype') return n.N_Name,m.N_Name,[x in e|x.gene],d.N_Name,labels(m) limit 100

match p=(n:`S_GARD`)-[e*0..2]-(m:`GHR_v1`) return p skip 100 limit 50

match(n:`S_ORDO`)-[]-(m:DATA) where not exists(m.symbol) and not exists(m.reason_for_obsolescence) with n match(n)-[:N_Name|:I_CODE*1..2]-(a:`S_HPO`) return count(distinct n) as `Orphanet`,count(distinct a) as `HPO`

match(n:`S_GARD`)-[]-(m:DATA) where m.is_rare=true and not (n)-[:N_Name|:I_CODE]-() return count(distinct n)

match(n:`S_GARD`)-[]-(m:DATA) where m.is_rare=true with distinct labels(n) as t, count(n) as cnt unwind  t as Label return Label,sum(cnt) as Count order by Count desc

match(n:`S_ORDO`)-[]-(m:DATA) where not exists(m.symbol) and not exists(m.reason_for_obsolescence) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_DOID`) where not exists(a.status) return count(distinct n) as `Orphanet`,count(distinct a) as `DO`

match(n:`S_ORDO`)-[]-(m:DATA) where not exists(m.symbol) and not exists(m.reason_for_obsolescence) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_OMIM`:T047) return count(distinct n) as `Orphanet`,count(distinct a) as `OMIM`

match(n:`S_MONDO`)-[]-(m:DATA) where not exists(n.status) and exists(m.label) return count(n)

match(n:`S_ORDO`)-[]-(m:DATA) where not exists(m.symbol) and not exists(m.reason_for_obsolescence) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_MONDO`)-[]-(b:DATA) where exists(b.label) and not exists(a.status) return count(distinct n) as `Orphanet`,count(distinct a) as `MONDO`


match(n:`S_GARD`)-[]-(m:DATA) where m.is_rare=true with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_MONDO`)-[]-(b:DATA) where exists(b.label) and not exists(a.status) return count(distinct n) as `GARD`,count(distinct a) as `MONDO`

match(n:`S_GARD`)-[]-(m:DATA) where m.is_rare=true with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_MEDLINEPLUS`) return count(distinct n) as `GARD`,count(distinct a) as `MEDLINE`

match(n:`S_GARD`)-[]-(m:DATA) where m.is_rare=true with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_MESH`:T047) return count(distinct n) as `GARD`,count(distinct a) as `MESH`

match(n:`S_GARD`)-[]-(m:DATA) where m.is_rare=true with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_OMIM`:T047) return count(distinct n) as `GARD`,count(distinct a) as `OMIM`

match(n:`S_GARD`)-[]-(m:DATA) where m.is_rare=true with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_DOID`) where not exists(a.status) return count(distinct n) as `GARD`,count(distinct a) as `DO`

match(n:`S_MESH`:T047) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_MEDLINEPLUS`:T047) return count(distinct n) as `MESH`,count(distinct a) as `MEDLINE`

match(n:`S_MESH`:T047) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_MONDO`)-[]-(b:DATA) where exists(b.label) and not exists(a.status) return count(distinct n) as `MESH`,count(distinct a) as `MONDO`

match(n:`S_OMIM`:T047) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_MONDO`)-[]-(b:DATA) where exists(b.label) and not exists(a.status) return count(distinct n) as `OMIM`,count(distinct a) as `MONDO`

match(n:`S_MONDO`)-[]-(m:DATA) where exists(m.label) and not exists(n.status) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_HPO`)-[]-(b:DATA) where exists(b.label) and not exists(a.status) return count(distinct n) as `MONDO`,count(distinct a) as `HPO`

match(n:`S_OMIM`:T047) where none(x in labels(n) where x='T028') return count(n)

MATCH (n:`Designated`)-[e*1..2]-(m:`human_phenotype`)-[]-(d:DATA) unwind e as g with distinct g.gene as g,count(n) as cnt unwind g as Gene return Gene,sum(cnt) as Count order by Count desc

match(n)-[]-(d:DATA) where d.id='MONDO:0019035' with n,d match(n)-[:R_subClassOf*1..9]->(m)-[]-(a:DATA) return n,d,m,a

match(n:`S_MONDO`)-[]-(m:DATA) where exists(m.label) and not exists(n.status) and not (n)<-[:R_subClassOf]-() return count(n)

# all leaf nodes descendants of rare disease
match(n)-[]-(d:DATA) where  exists(d.label) and not exists(n.status) and not (n)<-[:R_subClassOf]-() with n match(n)-[:R_subClassOf*1..9]->(m) where 'MONDO:0021200' in m.I_CODE return count(distinct n)

match(n:`S_ORDO`)-[]-(m:DATA) where not exists(m.symbol) and not exists(m.reason_for_obsolescence) with n match p=(n)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) return count(distinct n) as `ORDO`, count(distinct a) as `NORD`

match p=(n:`S_MEDGEN`:T047)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) return count(distinct n) as `MEDGEN`, count(distinct a) as `NORD`

match(n:`S_ORDO`)-[]-(m:DATA) where not exists(m.symbol) and not exists(m.reason_for_obsolescence) with n match p=(n)-[:N_Name|:I_CODE*1]-(a:`S_MEDGEN`:T047) return count(distinct n) as `ORDO`, count(distinct a) as `MEDGEN`

match(n:`S_ORDO`)-[]-(m:DATA) where not exists(m.symbol) and not exists(m.reason_for_obsolescence) with n match p=(n)-[:N_Name|:I_CODE*1]-(a:`S_THESAURUS`:`Disease or Syndrome`) return count(distinct n) as `ORDO`, count(distinct a) as `NCI`

match(n:`S_GHR`)-[:N_Name|:I_CODE*1]-(a:`S_THESAURUS`:`Disease or Syndrome`) return count(distinct n) as `GHR`, count(distinct a) as `NCI`

match(n:`S_GHR`)-[:N_Name|:I_CODE*1]-(a:`S_MEDGEN`:`T047`) return count(distinct n) as `GHR`, count(distinct a) as `MEDGEN`

match(n:`S_GHR`)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) return count(distinct n) as `GHR`, count(distinct a) as `NORD`

match(n:`S_DOID`)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) where not exists(n.status) return count(distinct n) as `DOID`, count(distinct a) as `NORD`

match(n:`S_DOID`)-[:N_Name|:I_CODE*1]-(a:`S_MEDGEN`:T047) where not exists(n.status) return count(distinct n) as `DOID`, count(distinct a) as `MEDGEN`

match(n:`S_DOID`)-[:N_Name|:I_CODE*1]-(a:`S_THESAURUS`:`Disease or Syndrome`) where not exists(n.status) return count(distinct n) as `DOID`, count(distinct a) as `NCI`

match(n:`S_MESH`:T047) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_MEDLINEPLUS`:T047) return count(distinct n) as `MESH`,count(distinct a) as `MEDLINE`

match(n:`S_MESH`:T047) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_MONDO`)-[]-(b:DATA) where exists(b.label) and not exists(a.status) return count(distinct n) as `MESH`,count(distinct a) as `MONDO`

match(n:`S_OMIM`:T047) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_MONDO`)-[]-(b:DATA) where exists(b.label) and not exists(a.status) return count(distinct n) as `OMIM`,count(distinct a) as `MONDO`

match(n:`S_MONDO`)-[]-(m:DATA) where exists(m.label) and not exists(n.status) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_HPO`)-[]-(b:DATA) where exists(b.label) and not exists(a.status) return count(distinct n) as `MONDO`,count(distinct a) as `HPO`

match(n:`S_OMIM`:T047) where none(x in labels(n) where x='T028') return count(n)

MATCH (n:`Designated`)-[e*1..2]-(m:`human_phenotype`)-[]-(d:DATA) unwind e as g with distinct g.gene as g,count(n) as cnt unwind g as Gene return Gene,sum(cnt) as Count order by Count desc

match(n)-[]-(d:DATA) where d.id='MONDO:0019035' with n,d match(n)-[:R_subClassOf*1..9]->(m)-[]-(a:DATA) return n,d,m,a

match(n:`S_MONDO`)-[]-(m:DATA) where exists(m.label) and not exists(n.status) and not (n)<-[:R_subClassOf]-() return count(n)

# all leaf nodes descendants of rare disease
match(n)-[]-(d:DATA) where  exists(d.label) and not exists(n.status) and not (n)<-[:R_subClassOf]-() with n match(n)-[:R_subClassOf*1..9]->(m) where 'MONDO:0021200' in m.I_CODE return count(distinct n)

match(n:`S_ORDO`)-[]-(m:DATA) where not exists(m.symbol) and not exists(m.reason_for_obsolescence) with n match p=(n)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) return count(distinct n) as `ORDO`, count(distinct a) as `NORD`

match p=(n:`S_MEDGEN`:T047)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) return count(distinct n) as `MEDGEN`, count(distinct a) as `NORD`

match(n:`S_ORDO`)-[]-(m:DATA) where not exists(m.symbol) and not exists(m.reason_for_obsolescence) with n match p=(n)-[:N_Name|:I_CODE*1]-(a:`S_MEDGEN`:T047) return count(distinct n) as `ORDO`, count(distinct a) as `MEDGEN`

match(n:`S_ORDO`)-[]-(m:DATA) where not exists(m.symbol) and not exists(m.reason_for_obsolescence) with n match p=(n)-[:N_Name|:I_CODE*1]-(a:`S_THESAURUS`:`Disease or Syndrome`) return count(distinct n) as `ORDO`, count(distinct a) as `NCI`

match(n:`S_GHR`)-[:N_Name|:I_CODE*1]-(a:`S_THESAURUS`:`Disease or Syndrome`) return count(distinct n) as `GHR`, count(distinct a) as `NCI`

match(n:`S_GHR`)-[:N_Name|:I_CODE*1]-(a:`S_MEDGEN`:`T047`) return count(distinct n) as `GHR`, count(distinct a) as `MEDGEN`

match(n:`S_GHR`)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) return count(distinct n) as `GHR`, count(distinct a) as `NORD`

match(n:`S_DOID`)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) where not exists(n.status) return count(distinct n) as `DOID`, count(distinct a) as `NORD`

match(n:`S_DOID`)-[:N_Name|:I_CODE*1]-(a:`S_MEDGEN`:T047) where not exists(n.status) return count(distinct n) as `DOID`, count(distinct a) as `MEDGEN`

match(n:`S_DOID`)-[:N_Name|:I_CODE*1]-(a:`S_THESAURUS`:`Disease or Syndrome`) where not exists(n.status) return count(distinct n) as `DOID`, count(distinct a) as `NCI`

match(n:`S_OMIM`:T047)-[:N_Name|:I_CODE*1]-(a:`S_MEDGEN`:T047) where not exists(n.status) return count(distinct n) as `OMIM`, count(distinct a) as `MEDGEN`

match(n:`S_OMIM`:T047)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) where not exists(n.status) return count(distinct n) as `OMIM`, count(distinct a) as `NORD`

match(n:`S_MESH`:T047)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) return count(distinct n) as `MESH`, count(distinct a) as `NORD`

match(n:`S_MESH`:T047)-[:N_Name|:I_CODE*1]-(a:`S_MEDGEN`:T047) return count(distinct n) as `MESH`, count(distinct a) as `MEDGEN`

match(n:`S_MESH`:T047)-[:N_Name|:I_CODE*1]-(a:`S_THESAURUS`:`Disease or Syndrome`) return count(distinct n) as `MESH`, count(distinct a) as `NCI`

match(n:`S_MEDLINEPLUS`)-[:N_Name|:I_CODE*1]-(a:`S_THESAURUS`:`Disease or Syndrome`) return count(distinct n) as `MEDLINE`, count(distinct a) as `NCI`

match(n:`S_MEDLINEPLUS`)-[:N_Name|:I_CODE*1]-(a:`S_MEDGEN`:T047) return count(distinct n) as `MEDLINE`, count(distinct a) as `MEDGEN`

match(n:`S_MEDLINEPLUS`)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) return count(distinct n) as `MEDLINE`, count(distinct a) as `NORD`

match(n:`S_MONDO`)-[]-(d:DATA) where not exists(n.status) and exists(d.label) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) return count(distinct n) as `MONDO`, count(distinct a) as `NORD`

match(n:`S_MONDO`)-[]-(d:DATA) where not exists(n.status) and exists(d.label) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_MEDGEN`:T047) return count(distinct n) as `MONDO`, count(distinct a) as `MEDGEN`

match(n:`S_MONDO`)-[]-(d:DATA) where not exists(n.status) and exists(d.label) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_THESAURUS`:`Disease or Syndrome`) return count(distinct n) as `MONDO`, count(distinct a) as `NCI`

match(n:`S_HPO`)-[:N_Name|:I_CODE*1]-(a:`S_THESAURUS`:`Disease or Syndrome`) return count(distinct n) as `HPO`, count(distinct a) as `NCI`

match(n:`S_HPO`)-[:N_Name|:I_CODE*1]-(a:`S_MEDGEN`:T047) return count(distinct n) as `HPO`, count(distinct a) as `MEDGEN`

match(n:`S_HPO`)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) return count(distinct n) as `HPO`, count(distinct a) as `NORD`

match(n:`S_THESAURUS`:`Disease or Syndrome`)-[:N_Name|:I_CODE*1]-(a:`S_NORD`) return count(distinct n) as `NCI`, count(distinct a) as `NORD`

match(n:`S_THESAURUS`:`Disease or Syndrome`)-[:N_Name|:I_CODE*1]-(a:`S_MEDGEN`:T047) return count(distinct n) as `NCI`, count(distinct a) as `MEDGEN`


match p=(n:`S_RANCHO-DISEASE-DRUG_2018-12-18_13-30`)-[:I_CODE|:N_Name*1..2]-(m:`S_GARD`) with distinct labels(m) as t,count(distinct n) as cnt unwind t as Label return Label,sum(cnt) as Count order by Count desc

match p=(n:`S_RANCHO-DISEASE-DRUG_2018-12-18_13-30`)-[:I_CODE|:N_Name*1..2]-(m:`S_GARD`) return p limit 200

match p=(n:`S_GARD`)-[:I_GENE]-(m:`S_GARD`) where id(n) <> id(m) return count(distinct p)

match (n:`S_RANCHO-DISEASE-DRUG_2018-12-18_13-30`)-[]-(d:DATA) with n,d match p=(n)-[:I_CODE|:N_Name*1..2]-(m:`S_GARD`) return p,d limit 200

match (n:`S_FDAORPHANGARD_20190216`)-[]-(d:DATA) with n,d match p=(n)-[:I_CODE|:N_Name*1..2]-(m:`S_GARD`) return p,d limit 200

match(n:`S_GARD`)-[]-(m:DATA) where m.is_rare=true with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_ICD10CM`)-[]-(b:DATA) return count(distinct n) as `GARD`,count(distinct a) as `ICD10`

match(n:`S_ORDO`)-[]-(m:DATA) where not exists(m.symbol) and not exists(m.reason_for_obsolescence) with n match p=(n)-[:N_Name|:I_CODE*1]-(a:`S_ICD10CM`) return count(distinct n) as `ORDO`, count(distinct a) as `ICD10`

match(n:`S_GHR`)-[]-(m:DATA)  with n match p=(n)-[:N_Name|:I_CODE*1]-(a:`S_ICD10CM`) return count(distinct n) as `GHR`, count(distinct a) as `ICD10`

match(n:`S_DOID`)-[:N_Name|:I_CODE*1]-(a:`S_ICD10CM`) where not exists(n.status) return count(distinct n) as `DOID`, count(distinct a) as `ICD10`

match(n:`S_OMIM`:T047)-[:N_Name|:I_CODE*1]-(a:`S_ICD10CM`) where not exists(n.status) return count(distinct n) as `OMIM`, count(distinct a) as `ICD10`

match(n:`S_MEDLINEPLUS`)-[:N_Name|:I_CODE*1]-(a:`S_ICD10CM`) return count(distinct n) as `MEDLINE`, count(distinct a) as `ICD10`

match(n:`S_MONDO`)-[]-(m:DATA) where exists(m.label) and not exists(n.status) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_ICD10CM`) return count(distinct n) as `MONDO`,count(distinct a) as `ICD10`

match(n:`S_HPO`)-[]-(m:DATA) where exists(m.label) and not exists(n.status) with n match(n)-[:N_Name|:I_CODE*1]-(a:`S_ICD10CM`) return count(distinct n) as `HPO`,count(distinct a) as `ICD10`

match p=(n:`S_OMIM`)-[:R_rel{name:'has_inheritance_type'}]-(m:`S_OMIM`) where ('T033' in labels(m) or 'T045' in labels(m)) and any(x in m.I_CODE where x =~ 'MTHU.*') return distinct id(m),m.N_Name,m.I_CODE order by m.N_Name

## hpo mode of inheritance hierarchy
match p=(n:`S_HP`)-[:R_subClassOf*1..100]->(m:`S_HP`) where 'HP:0000005' in m.I_CODE return p


## mode of inheritance for gard diseases
match (n:`S_HP`)-[e:R_rel{value:'inheritance_type_of'}]-(m:`S_GARD`) with n,m,e match p=(n)-[]-(d:DATA), q=(m)-[]-(f:DATA) return e.MedGen_source as source,d.label as `mode of inheritance`,d.id as `HPO`,f.id as `GARD`,f.name as `GARD disease` limit 1000

match (n:S_ORDO_ORPHANET)-[]-(d:DATA) where n._N_Name contains 'CYSTIC FIBROSIS' with n,d match p=(n)-[:R_subClassOf{property:'http://www.orpha.net/ORDO/Orphanet_C016'}]-()-[]-(:`S_HP`) return p,d

match (n:`S_OMIM`)-[:R_rel{name:'has_inheritance_type'}]-(m:`S_OMIM`)-[:N_Name|:I_CODE]-(z:`S_HP`) where ('T033' in labels(m) or 'T045' in labels(m)) and any(x in m.I_CODE where x =~ 'MTHU.*') and n._N_Name contains 'CYSTIC FIBROSIS' with n,m,z match p=(n)-[]-(:DATA), q=(m)-[]-(:DATA) return p,q,z

match (n:S_MEDGEN)--(d:DATA) with n,d match p=(n)--(v:S_CLINVAR)--(z:S_OGG)--(x:DATA) with count(distinct v) as variantCount, d.id as CUI,d.NAME as Disease,x.label as Gene where Gene="PCSK9" return distinct(CUI),Disease,Gene,variantCount order by variantCount desc, CUI limit 20

match (n:`S_GARD`)-[]-(d:DATA) where n._N_Name contains toUpper('charge syndrome')  with n,d match p=(n)-[e:N_Name|:I_CODE]-(o:S_OMIM:T047)-[:R_rel{name:'has_inheritance_type'}]-(m:S_OMIM)--(z:DATA), q=(o)--(x:DATA) return d.gard_id as GARD_ID,d.name as GARD,e.value as MATCHED,x.notation as OMIM,z.label as Inheritance
